name: To production

on:
  pull_request:
    branches: ["main"]
    types:
      - closed

jobs:
  dump-context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

  if-is-merged-pr:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      is_pr_merge: ${{ steps.is_pr_merge.outputs.is_pr_merge }}
    steps:
      - id: is_pr_merge
        run: echo "is_pr_merge=true" >> $GITHUB_OUTPUT

  find-what-to-deploy:
    runs-on: ubuntu-latest
    needs: if-is-merged-pr
    if: needs.if-is-merged-pr.outputs.is_pr_merge == 'true'
    permissions: read-all
    outputs:
      run_services: ${{ steps.get_services.outputs.run_services }}
      function_services: ${{ steps.get_services.outputs.function_services }}
    steps:
      - uses: actions/checkout@v4

      - run: git checkout origin/staging

      - id: get_branches
        run: git branch

      - id: get_commits
        run: echo "commits=$(git log --oneline staging..HEAD)" >> $GITHUB_OUTPUT

      - name: Get services to deploy
        uses: actions/github-script@v7
        env:
          commits: ${{ steps.get_commits.outputs.commits }}
        with:
          script: |
            console.log(process.env.commits);
